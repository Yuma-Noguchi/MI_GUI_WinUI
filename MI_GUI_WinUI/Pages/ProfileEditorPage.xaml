<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="MI_GUI_WinUI.Pages.ProfileEditorPage"
    x:Name="ProfileEditorRoot"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MI_GUI_WinUI.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:MI_GUI_WinUI.Controls"
    xmlns:converters="using:MI_GUI_WinUI.Converters"
    xmlns:models="using:MI_GUI_WinUI.Models"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:StringToBoolConverter x:Key="StringToBoolConverter"/>
        <converters:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverseConverter"/>
        <converters:DoubleToGridSizeConverter x:Key="DoubleToGridSizeConverter"/>
        <converters:EmptyCanvasConverter x:Key="EmptyCanvasConverter"/>

        <!-- Template for draggable buttons -->
        <DataTemplate x:Key="ButtonTemplate" x:DataType="models:DraggableGuiElement">
            <Border Background="Transparent" 
                    Width="100" Height="120"
                    Margin="4"
                    CanDrag="True"
                    DragStarting="Button_DragStarting">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                        
                    <!-- Button Icon -->
                    <Ellipse Grid.Row="0"
                            Width="50" 
                            Height="50"
                            Fill="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}"
                            Stroke="{ThemeResource SystemControlForegroundBaseMediumBrush}"/>
                        
                    <!-- Button Label -->
                    <TextBlock Grid.Row="1"
                              Text="{x:Bind DisplayName, Mode=OneWay}"
                              TextAlignment="Center"
                              TextWrapping="Wrap"
                              HorizontalAlignment="Center"
                              Margin="0,4,0,0"/>
                </Grid>
            </Border>
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- Header -->
            <RowDefinition Height="Auto"/> <!-- Save/Help Buttons -->
            <RowDefinition Height="Auto"/> <!-- Toolbar -->
            <RowDefinition Height="*"/>    <!-- Main Content -->
        </Grid.RowDefinitions>

        <!-- Header -->
        <controls:PageHeader Grid.Row="0" 
                           Title="{x:Bind ViewModel.Title, Mode=OneWay}"/>

        <!-- Save/Help Buttons -->
        <CommandBar Grid.Row="1" DefaultLabelPosition="Right" Background="Transparent">
            <CommandBar.PrimaryCommands>
                <AppBarButton Icon="Save" Label="Save Profile" Command="{x:Bind ViewModel.SaveProfileCommand}"/>
                <AppBarButton Icon="Help" Label="Help" Click="HelpButton_Click"/>
            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
                <AppBarButton Icon="Clear" Label="Clear Canvas" Click="ClearCanvas_Click"/>
            </CommandBar.SecondaryCommands>
        </CommandBar>

        <!-- Toolbar -->
        <CommandBar Grid.Row="2" DefaultLabelPosition="Right" Background="Transparent">
            <AppBarToggleButton Icon="ViewAll" Label="Show Grid" 
                              IsChecked="{x:Bind ViewModel.ShowGrid, Mode=TwoWay}"/>
            <AppBarToggleButton Icon="Attach" Label="Snap to Grid" 
                              IsChecked="{x:Bind ViewModel.SnapToGrid, Mode=TwoWay}"/>
        </CommandBar>

        <!-- Main Content -->
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300"/>  <!-- Button Sidebar -->
                <ColumnDefinition Width="*"/>    <!-- Canvas Area -->
                <ColumnDefinition Width="250"/>  <!-- Properties Panel -->
            </Grid.ColumnDefinitions>

            <!-- Button Sidebar -->
            <Grid Grid.Column="0" Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Profile Name -->
                <TextBox Grid.Row="0"
                        Header="Profile Name"
                        Text="{x:Bind ViewModel.ProfileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        PlaceholderText="Enter profile name..."
                        Margin="0,0,0,8"/>

                <!-- Search Box -->
                <AutoSuggestBox Grid.Row="1" 
                              PlaceholderText="Search buttons..."
                              Text="{x:Bind ViewModel.SearchText, Mode=TwoWay}"
                              Margin="0,0,0,8"/>

                <!-- Button List -->
                <ScrollViewer Grid.Row="2">
                    <ItemsRepeater ItemsSource="{x:Bind ViewModel.DefaultButtons}" 
                                 ItemTemplate="{StaticResource ButtonTemplate}"/>
                </ScrollViewer>
            </Grid>

            <!-- Canvas Area -->
            <Button x:Name="CanvasArea"
                    Grid.Column="1"
                    Background="Transparent"
                    Padding="0">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="CanvasBorder"
                                Margin="8" 
                                BorderBrush="{ThemeResource SystemControlForegroundBaseMediumLowBrush}" 
                                BorderThickness="1">
                <Grid>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="DragStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="DragOver">
                                <VisualState.Setters>
                            <Setter Target="CanvasBorder.BorderBrush" Value="{ThemeResource SystemAccentColor}"/>
                            <Setter Target="CanvasBorder.BorderThickness" Value="2"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>

                    <!-- Background Grid (when enabled) -->
                    <Canvas x:Name="BackgroundGrid"
                            Width="640" 
                            Height="480"
                            Visibility="{Binding ShowGrid, Mode=OneWay}"/>

                    <!-- Empty State Message -->
                    <TextBlock Text="Drag and drop buttons here to create your profile"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                             FontSize="16"
                             TextWrapping="Wrap"
                             TextAlignment="Center"
                             Margin="20"
                             Visibility="{Binding CanvasElements.Count, Mode=OneWay, Converter={StaticResource EmptyCanvasConverter}}"/>

                    <!-- Canvas -->
                    <ScrollViewer x:Name="CanvasScroller"
                                HorizontalScrollBarVisibility="Auto" 
                                VerticalScrollBarVisibility="Auto"
                                ZoomMode="Enabled">
                            <Canvas x:Name="EditorCanvas"
                                    Width="640" 
                                    Height="480"
                                    Background="{ThemeResource SystemControlBackgroundAltHighBrush}"
                                    AllowDrop="True"
                                    DragOver="EditorCanvas_DragOver"
                                    DragEnter="EditorCanvas_DragEnter"
                                    DragLeave="EditorCanvas_DragLeave"
                                    Drop="EditorCanvas_Drop">
                            <ItemsControl x:Name="CanvasItemsControl" ItemsSource="{Binding CanvasElements, Mode=OneWay}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas x:Name="ItemsCanvas" Background="Transparent"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemContainerStyle>
                                    <Style TargetType="ContentPresenter">
                                        <Setter Property="Canvas.Left" Value="{Binding X}"/>
                                        <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                                        <Setter Property="IsHitTestVisible" Value="True"/>
                                    </Style>
                                </ItemsControl.ItemContainerStyle>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate x:DataType="models:DraggableGuiElement">
                                        <Border x:Name="ElementBorder"
                                                Background="Transparent"
                                                Width="{x:Bind Radius, Mode=OneWay}"
                                                Height="{x:Bind Radius, Mode=OneWay}"
                                                ManipulationMode="All"
                                                IsHitTestVisible="True"
                                                PointerPressed="Element_PointerPressed"
                                                PointerReleased="Element_PointerReleased"
                                                PointerMoved="Element_PointerMoved">
                                            <Grid>
                                                    <Ellipse Fill="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}"
                                                             Stroke="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                                                             StrokeThickness="2"/>
                                                    <TextBlock Text="{x:Bind DisplayName, Mode=OneWay}"
                                                             TextAlignment="Center"
                                                             TextWrapping="Wrap"
                                                             HorizontalAlignment="Center"
                                                             VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            </Canvas>
                        </ScrollViewer>
                </Grid>
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <!-- Properties Panel -->
            <Grid Grid.Column="2" Margin="8">
                <StackPanel>
                    <TextBlock Text="Properties"
                              Style="{ThemeResource SubtitleTextBlockStyle}"
                              Margin="0,0,0,8"/>
                    <!-- Properties content will be added later -->
                </StackPanel>
            </Grid>

            <!-- Loading Overlay -->
            <Grid Grid.ColumnSpan="3" 
                  Background="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" 
                  Opacity="0.7"
                  Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}">
                <ProgressRing IsActive="{x:Bind ViewModel.IsLoading, Mode=OneWay}"
                            Width="50" 
                            Height="50"/>
            </Grid>
        </Grid>

        <!-- Error Message -->
        <InfoBar Grid.Row="0" Grid.RowSpan="4"
                 IsOpen="{x:Bind ViewModel.ErrorMessage, Mode=OneWay, Converter={StaticResource StringToBoolConverter}}"
                 Message="{x:Bind ViewModel.ErrorMessage, Mode=OneWay}"
                 Severity="Error"
                 VerticalAlignment="Top"/>
    </Grid>
</Page>
